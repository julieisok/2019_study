2. 스프링은 객체 컨테이너 
 - 스프링의 핵심 기능은 객체를 생성하고 초기화 하는 것 
 - 이와 관련된 기능은 ApplicationContext라는 인터페이스에 정의되어 있다
 - AnnotationConfigApplicationContext 클래스는 이 인터페이스를 알맞게 구현한 클래스 중 하나
 
 - BeanFactory 인터페이스 : 객체 생성과 검색에 대한 기능을 정의함. 
   예를 들어 생성된 객체를 검색하는데 필요한 getBean() 메서드가 BeanFactory에 정의되어 있다. 
   객체를 검색하는 것 이외에 싱글톤/프로토타입 빈인지 확인하는 기능도 제공한다. 
   
  - ApplicationContext 인터페이스 : 메시지, 프로필/환경 변수 등을 처리할 수 있는 기능을 추가로 정의
  
  * AnnotationConfigApplicationContext : 자바 애노테이션을 이용하여 클래스로부터 객체 설정 정보를 가져옴
  * GenericXmlApplicationContext : XML로부터 객체 설정 정보를 가져옴
  * GenericGroovyApplicationContext : 그루비 코드를 이용해 설정 정보를 가져옴
    ==> 어떤 구현 클래스를 사용하든, 각 구현 클래스는 설정 정보로부터 빈(Bean)이라고 불리는 개체를 생성하고 그 객체를 내부에 보관함.
        그리고 getBean() 메서드를 실행하면 해당하는 빈 객체를 제공함. 
        
  - ApplicationContext(또는 BeanFactory)는 빈객체의 생성, 초기화, 보관, 제거 등을 관리하고 있어서 
    ApplicationContext를 컨테이너(Container)라고도 부름. 
    
  
  2.1 싱글톤(Singleton) 객체
- 별도 설정을 하지 않을 경우 스프링은 한 개의 빈 객체만을 생성 
- 이때 빈 객체는 '싱글톤 범위를 갖는다' 고 표현 
- 싱글톤은 단일 객체(single object)를 의미하는 단어로 스프링은 기본적으로 한 개의 @Bean애노테이션에 대해 한 개의 빈 객체를 생성함 
-   
  